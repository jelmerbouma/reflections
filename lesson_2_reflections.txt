What happens when you initialize a repository? Why do you need to do it?
.git folder created in the directory where you run git init
no commits created
git status will tell you no commits with the files you can add to repo

How is the staging area different from the working directory and the repository?
What value do you think it offers?
staging area allows you to put 1 or multiple files ready for a commit to the repo
working directory is your local set of files on which you are working


How can you use the staging area to make sure you have one commit per logical
change?
by adding 1 or more files that relate to a logical change in the staging area before commiting.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
* for adding experimental or big changes to your code base that you want to test
while keeping your master intact

How do the diagrams help you visualize the branch structure?
* graphic representation from which commit onwards the branch originates


What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
* new lines of code added if both new, lines that are deleted in both deleted.
* new commit is created with new master branch if you merge to master.
* old branch can then be deleted, those commits can then no longer be reached, 
but they will have been merged with the master.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
all the obvious stuff (additions/deletions in 1 file not in the other) is merged.
saves you from doing all the grunt work.
Con: you don't always know exactly what changes you are committing to your branch